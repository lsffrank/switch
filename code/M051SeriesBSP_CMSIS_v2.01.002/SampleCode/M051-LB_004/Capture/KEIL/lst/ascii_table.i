#line 1 "..\\..\\..\\..\\LibM051Series\\M051-LB_004_Driver\\src\\Ascii_Table.C"
 









 
#line 1 "C:\\Keil\\ARM\\RV31\\INC\\stdio.h"
 
 
 





 






 









#line 34 "C:\\Keil\\ARM\\RV31\\INC\\stdio.h"


  
  typedef unsigned int size_t;    








 
 

 
  typedef struct __va_list __va_list;





   




 




typedef struct __fpos_t_struct {
    unsigned __int64 __pos;
    



 
    struct {
        unsigned int __state1, __state2;
    } __mbstate;
} fpos_t;
   


 


   

 

typedef struct __FILE FILE;
   






 

extern FILE __stdin, __stdout, __stderr;
extern FILE *__aeabi_stdin, *__aeabi_stdout, *__aeabi_stderr;

#line 125 "C:\\Keil\\ARM\\RV31\\INC\\stdio.h"
    

    

    





     



   


 


   


 

   



 

   


 




   


 





    


 






extern __declspec(__nothrow) int remove(const char *  ) __attribute__((__nonnull__(1)));
   





 
extern __declspec(__nothrow) int rename(const char *  , const char *  ) __attribute__((__nonnull__(1,2)));
   








 
extern __declspec(__nothrow) FILE *tmpfile(void);
   




 
extern __declspec(__nothrow) char *tmpnam(char *  );
   











 

extern __declspec(__nothrow) int fclose(FILE *  ) __attribute__((__nonnull__(1)));
   







 
extern __declspec(__nothrow) int fflush(FILE *  );
   







 
extern __declspec(__nothrow) FILE *fopen(const char * __restrict  ,
                           const char * __restrict  ) __attribute__((__nonnull__(1,2)));
   








































 
extern __declspec(__nothrow) FILE *freopen(const char * __restrict  ,
                    const char * __restrict  ,
                    FILE * __restrict  ) __attribute__((__nonnull__(2,3)));
   








 
extern __declspec(__nothrow) void setbuf(FILE * __restrict  ,
                    char * __restrict  ) __attribute__((__nonnull__(1)));
   




 
extern __declspec(__nothrow) int setvbuf(FILE * __restrict  ,
                   char * __restrict  ,
                   int  , size_t  ) __attribute__((__nonnull__(1)));
   















 
#pragma __printf_args
extern __declspec(__nothrow) int fprintf(FILE * __restrict  ,
                    const char * __restrict  , ...) __attribute__((__nonnull__(1,2)));
   


















 
#pragma __printf_args
extern __declspec(__nothrow) int _fprintf(FILE * __restrict  ,
                     const char * __restrict  , ...) __attribute__((__nonnull__(1,2)));
   



 
#pragma __printf_args
extern __declspec(__nothrow) int printf(const char * __restrict  , ...) __attribute__((__nonnull__(1)));
   




 
#pragma __printf_args
extern __declspec(__nothrow) int _printf(const char * __restrict  , ...) __attribute__((__nonnull__(1)));
   



 
#pragma __printf_args
extern __declspec(__nothrow) int sprintf(char * __restrict  , const char * __restrict  , ...) __attribute__((__nonnull__(1,2)));
   






 
#pragma __printf_args
extern __declspec(__nothrow) int _sprintf(char * __restrict  , const char * __restrict  , ...) __attribute__((__nonnull__(1,2)));
   



 

#pragma __printf_args
extern __declspec(__nothrow) int snprintf(char * __restrict  , size_t  ,
                     const char * __restrict  , ...) __attribute__((__nonnull__(3)));
   















 

#pragma __printf_args
extern __declspec(__nothrow) int _snprintf(char * __restrict  , size_t  ,
                      const char * __restrict  , ...) __attribute__((__nonnull__(3)));
   



 
#pragma __scanf_args
extern __declspec(__nothrow) int fscanf(FILE * __restrict  ,
                    const char * __restrict  , ...) __attribute__((__nonnull__(1,2)));
   






























 
#pragma __scanf_args
extern __declspec(__nothrow) int _fscanf(FILE * __restrict  ,
                     const char * __restrict  , ...) __attribute__((__nonnull__(1,2)));
   



 
#pragma __scanf_args
extern __declspec(__nothrow) int scanf(const char * __restrict  , ...) __attribute__((__nonnull__(1)));
   






 
#pragma __scanf_args
extern __declspec(__nothrow) int _scanf(const char * __restrict  , ...) __attribute__((__nonnull__(1)));
   



 
#pragma __scanf_args
extern __declspec(__nothrow) int sscanf(const char * __restrict  ,
                    const char * __restrict  , ...) __attribute__((__nonnull__(1,2)));
   








 
#pragma __scanf_args
extern __declspec(__nothrow) int _sscanf(const char * __restrict  ,
                     const char * __restrict  , ...) __attribute__((__nonnull__(1,2)));
   



 

 
extern __declspec(__nothrow) int vfscanf(FILE * __restrict  , const char * __restrict  , __va_list) __attribute__((__nonnull__(1,2)));
extern __declspec(__nothrow) int vscanf(const char * __restrict  , __va_list) __attribute__((__nonnull__(1)));
extern __declspec(__nothrow) int vsscanf(const char * __restrict  , const char * __restrict  , __va_list) __attribute__((__nonnull__(1,2)));

extern __declspec(__nothrow) int _vfscanf(FILE * __restrict  , const char * __restrict  , __va_list) __attribute__((__nonnull__(1,2)));
extern __declspec(__nothrow) int _vscanf(const char * __restrict  , __va_list) __attribute__((__nonnull__(1)));
extern __declspec(__nothrow) int _vsscanf(const char * __restrict  , const char * __restrict  , __va_list) __attribute__((__nonnull__(1,2)));

extern __declspec(__nothrow) int vprintf(const char * __restrict  , __va_list  ) __attribute__((__nonnull__(1)));
   





 
extern __declspec(__nothrow) int _vprintf(const char * __restrict  , __va_list  ) __attribute__((__nonnull__(1)));
   



 
extern __declspec(__nothrow) int vfprintf(FILE * __restrict  ,
                    const char * __restrict  , __va_list  ) __attribute__((__nonnull__(1,2)));
   






 
extern __declspec(__nothrow) int vsprintf(char * __restrict  ,
                     const char * __restrict  , __va_list  ) __attribute__((__nonnull__(1,2)));
   






 

extern __declspec(__nothrow) int vsnprintf(char * __restrict  , size_t  ,
                     const char * __restrict  , __va_list  ) __attribute__((__nonnull__(3)));
   







 

extern __declspec(__nothrow) int _vsprintf(char * __restrict  ,
                      const char * __restrict  , __va_list  ) __attribute__((__nonnull__(1,2)));
   



 
extern __declspec(__nothrow) int _vfprintf(FILE * __restrict  ,
                     const char * __restrict  , __va_list  ) __attribute__((__nonnull__(1,2)));
   



 
extern __declspec(__nothrow) int _vsnprintf(char * __restrict  , size_t  ,
                      const char * __restrict  , __va_list  ) __attribute__((__nonnull__(3)));
   



 
extern __declspec(__nothrow) int fgetc(FILE *  ) __attribute__((__nonnull__(1)));
   







 
extern __declspec(__nothrow) char *fgets(char * __restrict  , int  ,
                    FILE * __restrict  ) __attribute__((__nonnull__(1,3)));
   










 
extern __declspec(__nothrow) int fputc(int  , FILE *  ) __attribute__((__nonnull__(2)));
   







 
extern __declspec(__nothrow) int fputs(const char * __restrict  , FILE * __restrict  ) __attribute__((__nonnull__(1,2)));
   




 
extern __declspec(__nothrow) int getc(FILE *  ) __attribute__((__nonnull__(1)));
   







 




    extern __declspec(__nothrow) int (getchar)(void);

   





 
extern __declspec(__nothrow) char *gets(char *  ) __attribute__((__nonnull__(1)));
   









 
extern __declspec(__nothrow) int putc(int  , FILE *  ) __attribute__((__nonnull__(2)));
   





 




    extern __declspec(__nothrow) int (putchar)(int  );

   



 
extern __declspec(__nothrow) int puts(const char *  ) __attribute__((__nonnull__(1)));
   





 
extern __declspec(__nothrow) int ungetc(int  , FILE *  ) __attribute__((__nonnull__(2)));
   






















 

extern __declspec(__nothrow) size_t fread(void * __restrict  ,
                    size_t  , size_t  , FILE * __restrict  ) __attribute__((__nonnull__(1,4)));
   











 

extern __declspec(__nothrow) size_t __fread_bytes_avail(void * __restrict  ,
                    size_t  , FILE * __restrict  ) __attribute__((__nonnull__(1,3)));
   











 

extern __declspec(__nothrow) size_t fwrite(const void * __restrict  ,
                    size_t  , size_t  , FILE * __restrict  ) __attribute__((__nonnull__(1,4)));
   







 

extern __declspec(__nothrow) int fgetpos(FILE * __restrict  , fpos_t * __restrict  ) __attribute__((__nonnull__(1,2)));
   








 
extern __declspec(__nothrow) int fseek(FILE *  , long int  , int  ) __attribute__((__nonnull__(1)));
   














 
extern __declspec(__nothrow) int fsetpos(FILE * __restrict  , const fpos_t * __restrict  ) __attribute__((__nonnull__(1,2)));
   










 
extern __declspec(__nothrow) long int ftell(FILE *  ) __attribute__((__nonnull__(1)));
   











 
extern __declspec(__nothrow) void rewind(FILE *  ) __attribute__((__nonnull__(1)));
   





 

extern __declspec(__nothrow) void clearerr(FILE *  ) __attribute__((__nonnull__(1)));
   




 

extern __declspec(__nothrow) int feof(FILE *  ) __attribute__((__nonnull__(1)));
   


 
extern __declspec(__nothrow) int ferror(FILE *  ) __attribute__((__nonnull__(1)));
   


 
extern __declspec(__nothrow) void perror(const char *  );
   









 

extern __declspec(__nothrow) int _fisatty(FILE *   ) __attribute__((__nonnull__(1)));
    
 

extern __declspec(__nothrow) void __use_no_semihosting_swi(void);
extern __declspec(__nothrow) void __use_no_semihosting(void);
    





 











#line 944 "C:\\Keil\\ARM\\RV31\\INC\\stdio.h"



 
#line 13 "..\\..\\..\\..\\LibM051Series\\M051-LB_004_Driver\\src\\Ascii_Table.C"
const char Ascii[] =
{
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ,
     
    0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00,
     
    0x00, 0x00, 0x00, 0xC0, 0x30, 0xC0, 0x30, 0x00, 0xC8, 0x39, 0xCF, 0x39, 0x0F, 0x09, 0x01, 0x00,
     
    0xE0, 0x10, 0x10, 0xF8, 0x10, 0x10, 0x60, 0x00, 0x30, 0x41, 0x42, 0xFF, 0x42, 0x44, 0x38, 0x00,
     
    0xC0, 0x20, 0x10, 0xE0, 0x20, 0xE0, 0x18, 0x00, 0x01, 0xC2, 0x31, 0x0C, 0x73, 0x88, 0x44, 0x38
    ,
     
    0x00, 0xE0, 0x10, 0x10, 0xE0, 0x00, 0x00, 0x00, 0x78, 0x85, 0x82, 0x8D, 0x70, 0xA2, 0x9E, 0x42
    ,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ,
     
    0xC0, 0x30, 0x08, 0x04, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x60, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00
    ,
     
    0x04, 0x08, 0x30, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x60, 0x1F, 0x00, 0x00, 0x00, 0x00
    ,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x28, 0xFE, 0x28, 0x44, 0x00, 0x00, 0x00
    ,
     
    0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0xFF, 0x08, 0x08, 0x08, 0x00,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB0, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00
    ,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ,
     
    0x00, 0x00, 0x80, 0x70, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x1C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00
    ,
     
    0xC0, 0x20, 0x10, 0x10, 0x20, 0xC0, 0x00, 0x00, 0x3F, 0x40, 0x80, 0x80, 0x40, 0x3F, 0x00, 0x00,
     
    0x20, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
     
    0x60, 0x10, 0x10, 0x10, 0x20, 0xC0, 0x00, 0x00, 0xC0, 0xA0, 0x90, 0x88, 0x86, 0xC1, 0x00, 0x00
    ,
     
    0x20, 0x10, 0x10, 0x10, 0xE0, 0x00, 0x00, 0x00, 0x80, 0x80, 0x82, 0x83, 0x44, 0x38, 0x00, 0x00
    ,
     
    0x00, 0x00, 0x80, 0x60, 0xF0, 0x00, 0x00, 0x00, 0x18, 0x16, 0x11, 0x10, 0xFF, 0x10, 0x00, 0x00,
     
    0x00, 0xF0, 0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 0x80, 0x81, 0x81, 0x81, 0x42, 0x3C, 0x00, 0x00
    ,
     
    0x80, 0x40, 0x20, 0x10, 0x10, 0x10, 0x00, 0x00, 0x3F, 0x42, 0x81, 0x81, 0x42, 0x3C, 0x00, 0x00
    ,
     
    0x70, 0x10, 0x10, 0x10, 0x90, 0x70, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x1C, 0x03, 0x00, 0x00, 0x00
    ,
     
    0xC0, 0x20, 0x10, 0x10, 0x20, 0xC0, 0x00, 0x00, 0x38, 0x45, 0x82, 0x82, 0x45, 0x38, 0x00, 0x00
    ,
     
    0xC0, 0x20, 0x10, 0x10, 0x20, 0xC0, 0x00, 0x00, 0x83, 0x84, 0x88, 0x48, 0x24, 0x1F, 0x00, 0x00
    ,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC3, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ,
     
    0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB0, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x28, 0x28, 0x44, 0x44, 0x82, 0x00, 0x00
    ,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88
    ,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x44, 0x44, 0x28, 0x28, 0x10, 0x00, 0x00
    ,
     
    0xE0, 0x10, 0x10, 0x10, 0x20, 0xC0, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x06, 0x01, 0x00, 0x00, 0x00
    ,
     
    0xC0, 0x20, 0x10, 0x90, 0x90, 0x10, 0xA0, 0xC0, 0x3F, 0x40, 0x8F, 0x90, 0x90, 0x8F, 0x50, 0x5F,
     
    0x00, 0x00, 0x80, 0x70, 0x80, 0x00, 0x00, 0x00, 0x80, 0xF0, 0x8F, 0x08, 0x8F, 0xF0, 0x80, 0x00,
     
    0x10, 0xF0, 0x10, 0x10, 0x10, 0x20, 0xC0, 0x00, 0x80, 0xFF, 0x82, 0x82, 0x82, 0x45, 0x38, 0x00,
     
    0xC0, 0x20, 0x10, 0x10, 0x10, 0x20, 0x70, 0x00, 0x3F, 0x40, 0x80, 0x80, 0x80, 0x80, 0x40, 0x00
    ,
     
    0x10, 0xF0, 0x10, 0x10, 0x10, 0x60, 0x80, 0x00, 0x80, 0xFF, 0x80, 0x80, 0x80, 0x60, 0x1F, 0x00,
     
    0x10, 0xF0, 0x10, 0x10, 0x10, 0x10, 0x70, 0x00, 0x80, 0xFF, 0x82, 0x82, 0x82, 0x87, 0xE0, 0x00,
     
    0x10, 0xF0, 0x10, 0x10, 0x10, 0x10, 0x70, 0x00, 0x80, 0xFF, 0x82, 0x02, 0x02, 0x07, 0x00, 0x00,
     
    0xC0, 0x20, 0x10, 0x10, 0x20, 0x70, 0x00, 0x00, 0x3F, 0x40, 0x80, 0x80, 0x84, 0x7C, 0x04, 0x00
    ,
     
    0x10, 0xF0, 0x10, 0x00, 0x10, 0xF0, 0x10, 0x00, 0x80, 0xFF, 0x82, 0x02, 0x82, 0xFF, 0x80, 0x00,
     
    0x10, 0xF0, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
     
    0x00, 0x00, 0x10, 0xF0, 0x10, 0x00, 0x00, 0x00, 0x40, 0x80, 0x80, 0x7F, 0x00, 0x00, 0x00, 0x00,
     
    0x10, 0xF0, 0x10, 0x80, 0x50, 0x30, 0x10, 0x00, 0x80, 0xFF, 0x83, 0x0C, 0xB0, 0xC0, 0x80, 0x00,
     
    0x10, 0xF0, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x80, 0x80, 0x80, 0xC0, 0x20, 0x00,
     
    0x10, 0xF0, 0x80, 0x00, 0x80, 0xF0, 0x10, 0x00, 0x80, 0xFF, 0x83, 0x3C, 0x83, 0xFF, 0x80, 0x00,
     
    0x10, 0xF0, 0xC0, 0x00, 0x10, 0xF0, 0x10, 0x00, 0x80, 0xFF, 0x80, 0x0F, 0x30, 0xFF, 0x00, 0x00,
     
    0x80, 0x60, 0x10, 0x10, 0x10, 0x60, 0x80, 0x00, 0x1F, 0x60, 0x80, 0x80, 0x80, 0x60, 0x1F, 0x00,
     
    0x10, 0xF0, 0x10, 0x10, 0x10, 0x20, 0xC0, 0x00, 0x80, 0xFF, 0x84, 0x04, 0x04, 0x02, 0x01, 0x00,
     
    0xE0, 0x18, 0x04, 0x04, 0x04, 0x18, 0xE0, 0x00, 0x07, 0x18, 0x20, 0x20, 0x60, 0x98, 0x87, 0x00
    ,
     
    0x10, 0xF0, 0x10, 0x10, 0x10, 0x20, 0xC0, 0x00, 0x80, 0xFF, 0x84, 0x0C, 0x34, 0xC2, 0x81, 0x00,
     
    0xC0, 0x20, 0x10, 0x10, 0x10, 0x20, 0x70, 0x00, 0xE0, 0x41, 0x82, 0x82, 0x84, 0x48, 0x30, 0x00
    ,
     
    0x30, 0x10, 0x10, 0xF0, 0x10, 0x10, 0x30, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x80, 0x00, 0x00, 0x00,
     
    0x10, 0xF0, 0x10, 0x00, 0x10, 0xF0, 0x10, 0x00, 0x00, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x00, 0x00,
     
    0x10, 0xF0, 0x10, 0x00, 0x10, 0xF0, 0x10, 0x00, 0x00, 0x01, 0x1E, 0xE0, 0x1E, 0x01, 0x00, 0x00,
     
    0x10, 0xF0, 0x10, 0xC0, 0x10, 0xF0, 0x10, 0x00, 0x00, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0x00, 0x00,
     
    0x10, 0x70, 0x90, 0x00, 0x90, 0x70, 0x10, 0x00, 0x80, 0xE0, 0x99, 0x06, 0x99, 0xE0, 0x80, 0x00
    ,
     
    0x10, 0x70, 0x90, 0x00, 0x90, 0x70, 0x10, 0x00, 0x00, 0x00, 0x83, 0xFC, 0x83, 0x00, 0x00, 0x00
    ,
     
    0x70, 0x10, 0x10, 0x10, 0x10, 0xD0, 0x30, 0x00, 0xC0, 0xB0, 0x88, 0x86, 0x81, 0x80, 0xE0, 0x00
    ,
     
    0xFC, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
     
    0x70, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x1C, 0xE0, 0x00, 0x00, 0x00, 0x00
    ,
     
    0x04, 0x04, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x60, 0x18, 0x06, 0x18, 0x60, 0x80, 0x00
    ,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80
    ,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x60, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00
    ,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x91, 0x89, 0x49, 0xFE, 0x80, 0x00, 0x00
    ,
     
    0x10, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x81, 0x81, 0x42, 0x3C, 0x00, 0x00,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x42, 0x81, 0x81, 0x81, 0x42, 0x00, 0x00
    ,
     
    0x00, 0x00, 0x00, 0x10, 0xF0, 0x00, 0x00, 0x00, 0x3C, 0x42, 0x81, 0x81, 0x7F, 0x80, 0x00, 0x00,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x4A, 0x89, 0x89, 0x8A, 0x4C, 0x00, 0x00
    ,
     
    0x00, 0x00, 0xE0, 0x10, 0x10, 0x20, 0x00, 0x00, 0x01, 0x81, 0xFF, 0x81, 0x01, 0x00, 0x00, 0x00,
     
    0x80, 0x40, 0x40, 0x40, 0x80, 0x40, 0x00, 0x00, 0x53, 0xAC, 0xA4, 0xA4, 0xA3, 0x40, 0x00, 0x00,
     
    0x10, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x01, 0x01, 0xFE, 0x80, 0x00, 0x00,
     
    0x00, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
     
    0x00, 0x00, 0x80, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0x80, 0x7F, 0x00, 0x00, 0x00, 0x00
    ,
     
    0x10, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x98, 0x25, 0xC3, 0x81, 0x00, 0x00,
     
    0x10, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0xFE, 0x01, 0xFE, 0x01, 0xFE, 0x80, 0x00,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0xFE, 0x01, 0x01, 0xFE, 0x80, 0x00, 0x00,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x42, 0x81, 0x81, 0x42, 0x3C, 0x00, 0x00
    ,
     
    0x40, 0x80, 0x40, 0x40, 0x80, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xA0, 0x20, 0x10, 0x0F, 0x00, 0x00,
     
    0x00, 0x80, 0x40, 0x40, 0x80, 0x40, 0x00, 0x00, 0x0F, 0x10, 0x20, 0xA0, 0xFF, 0x80, 0x00, 0x00,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0xFF, 0x82, 0x01, 0x01, 0x00, 0x00, 0x00,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE6, 0x49, 0x89, 0x91, 0x92, 0x67, 0x00, 0x00
    ,
     
    0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x7F, 0x81, 0x81, 0x40, 0x00, 0x00
    ,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x7F, 0x80, 0x81, 0x7F, 0x80, 0x00, 0x00,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x07, 0x39, 0xC0, 0x39, 0x07, 0x01, 0x00
    ,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x1F, 0xE1, 0x1C, 0xE1, 0x1F, 0x01, 0x00,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0xE7, 0x18, 0x18, 0xE7, 0x81, 0x00, 0x00
    ,
     
    0x40, 0xC0, 0x40, 0x00, 0x40, 0xC0, 0x40, 0x00, 0x80, 0x81, 0x46, 0x38, 0x06, 0x01, 0x00, 0x00
    ,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC3, 0xA1, 0x91, 0x89, 0x85, 0xC3, 0x00, 0x00
    ,
     
    0x00, 0xF0, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x7D, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00
    ,
     
    0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     
    0x08, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x7D, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00
    ,
     
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x20, 0x20, 0x60, 0xC0, 0x80, 0x80, 0x60
};
